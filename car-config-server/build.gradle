buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("se.transmode.gradle:gradle-docker:1.2")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'
apply plugin: 'docker'

group = 'kebencool'
version = '0.0.1-SNAPSHOT'
//指定编译.java文件的jdk版本
sourceCompatibility = 1.8
//确保.class文件与targetCompatibility所指定版本或者更新版本的java虚拟机兼容
targetCompatibility = 1.8

mainClassName = "com.example.configServer.ConfigServerApplication"

//配置镜像名称和版本号
jar {
    baseName = "config-server"
    version = "0.0.1-SNAPSHOT"
}

//配置docker构建基础信息
docker {
    baseImage 'store/oracle/serverjre:8'
    maintainer 'kebencool kebencool@keben'
    registry 'car'
}

//taskBuilder 的任务配置
task dockerBuilder(type: Docker) {
    applicationName = jar.baseName
    tagVersion = jar.version
    volume('/tmp')
    //发布到远程docker hub仓库
    push = project.hasProperty('push')
    addFile("${jar.baseName}-${jar.version}.jar","app.jar")
    entryPoint(["java","-Djava.security.egd=file:/dev/./urandom","-jar",'app.jar'])
    exposePort(8760)
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

repositories {
    mavenLocal()
    //使用阿里云镜像
    maven {url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }

}

ext {
    springCloudVersion = 'Finchley.RC1'
}
dependencies {
    compile('org.springframework.cloud:spring-cloud-config-server')
    compile('org.springframework.boot:spring-boot-starter-test')

//    配置按json格式顯示
//    compile('org.springframework.cloud:spring-cloud-starter-eureka')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
