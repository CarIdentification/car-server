buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("se.transmode.gradle:gradle-docker:1.2")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'
apply plugin: 'docker'

group = 'org.car-discern'
version = '0.0.1-SNAPSHOT'
//指定编译.java文件的jdk版本
sourceCompatibility = 1.8
//确保.class文件与targetCompatibility所指定版本或者更新版本的java虚拟机兼容
targetCompatibility = 1.8

mainClassName = "org.car-discern.ServerApplication"

//配置镜像名称和版本号
jar {
	baseName = "spring-boot-car-server"
	version = 1.0
}
//tag = "${project.group}/${applicationName}:${project.version}"


//配置docker构建基础信息
distDocker {
	baseImage = "car-server"
	maintainer = "kelvin"
}

//taskBuilder 的任务配置
task buildDocker(type: Docker, dependsOn: build) {
	applicationName = jar.baseName
	tagVersion = jar.version
	volume('/tmp')
	addFile("${jar.baseName}-${jar.version}.jar", "app.jar")
	entryPoint(["java", "-Djava.security.egd=file:/dev/./urandom", "-jar", 'app.jar'])
	exposePort(8761)
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}



repositories {
	mavenLocal()
	//使用阿里云镜像
	maven {url 'http://maven.aliyun.com/nexus/content/groups/public/'}
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }

}


ext {
	springCloudVersion = 'Finchley.RC1'
}

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile('org.springframework.cloud:spring-cloud-starter-config')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
